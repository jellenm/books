{"dependencies":[],"generated":{"js":"\"use strict\";\n\n/*\n * Copyright (C) 2012 David Geary. This code is from the book\n * Core HTML5 Canvas, published by Prentice-Hall in 2012.\n *\n * License:\n *\n * Permission is hereby granted, free of charge, to any person \n * obtaining a copy of this software and associated documentation files\n * (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge,\n * publish, distribute, sublicense, and/or sell copies of the Software,\n * and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * The Software may not be used to create training material of any sort,\n * including courses, books, instructional videos, presentations, etc.\n * without the express written consent of David Geary.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// Stopwatch..................................................................\n//\n// Like the real thing, you can start and stop a stopwatch, and you can\n// find out the elapsed time the stopwatch has been running. After you stop\n// a stopwatch, it's getElapsedTime() method returns the elapsed time\n// between the start and stop.\n//\n// Stopwatches are used primarily for timing animations.\n\nwindow.Stopwatch = function () {};\n\n// You can get the elapsed time while the timer is running, or after it's\n// stopped.\n\nStopwatch.prototype = {\n  startTime: 0,\n  running: false,\n  elapsed: undefined,\n\n  start: function start() {\n    this.startTime = +new Date();\n    this.elapsedTime = undefined;\n    this.running = true;\n  },\n\n  stop: function stop() {\n    this.elapsed = +new Date() - this.startTime;\n    this.running = false;\n  },\n\n  getElapsedTime: function getElapsedTime() {\n    if (this.running) {\n      return +new Date() - this.startTime;\n    } else {\n      return this.elapsed;\n    }\n  },\n\n  isRunning: function isRunning() {\n    return this.running;\n  },\n\n  reset: function reset() {\n    this.elapsed = 0;\n  }\n};"},"hash":"6c475620235d26f3dedacff27f711c99"}