{"dependencies":[],"generated":{"js":"\"use strict\";\n\n/*\r\n * Copyright (C) 2012 David Geary. This code is from the book\r\n * Core HTML5 Canvas, published by Prentice-Hall in 2012.\r\n *\r\n * License:\r\n *\r\n * Permission is hereby granted, free of charge, to any person \r\n * obtaining a copy of this software and associated documentation files\r\n * (the \"Software\"), to deal in the Software without restriction,\r\n * including without limitation the rights to use, copy, modify, merge,\r\n * publish, distribute, sublicense, and/or sell copies of the Software,\r\n * and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * The Software may not be used to create training material of any sort,\r\n * including courses, books, instructional videos, presentations, etc.\r\n * without the express written consent of David Geary.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\r\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\n * OTHER DEALINGS IN THE SOFTWARE.\r\n*/\n\nvar canvas = document.getElementById('canvas'),\n    context = canvas.getContext('2d'),\n    runnerCells = [{ left: 0, top: 0, width: 47, height: 64 }, { left: 55, top: 0, width: 44, height: 64 }, { left: 107, top: 0, width: 39, height: 64 }, { left: 152, top: 0, width: 46, height: 64 }, { left: 208, top: 0, width: 49, height: 64 }, { left: 265, top: 0, width: 46, height: 64 }, { left: 320, top: 0, width: 42, height: 64 }, { left: 380, top: 0, width: 35, height: 64 }, { left: 425, top: 0, width: 35, height: 64 }],\n\n\n// Behaviors.................................................\n\nrunInPlace = {\n  lastAdvance: 0,\n  PAGEFLIP_INTERVAL: 100,\n\n  execute: function execute(sprite, context, time) {\n    if (time - this.lastAdvance > this.PAGEFLIP_INTERVAL) {\n      sprite.painter.advance();\n      this.lastAdvance = time;\n    }\n  }\n},\n    moveLeftToRight = {\n  lastMove: 0,\n\n  execute: function execute(sprite, context, time) {\n    // if (this.lastMove !== 0) {\n    sprite.left -= sprite.velocityX * ((time - this.lastMove) / 1000);\n\n    if (sprite.left < 0) {\n      sprite.left = canvas.width;\n    }\n    // }\n    this.lastMove = time;\n  }\n},\n\n\n// Sprite....................................................\n\nsprite = new Sprite('runner', new SpriteSheetPainter(runnerCells), [runInPlace, moveLeftToRight]);\nwindow.spritesheet = new Image();\n\n// Functions.....................................................\n\nfunction drawBackground() {\n  var STEP_Y = 12,\n      i = context.canvas.height;\n\n  while (i > STEP_Y * 4) {\n    context.beginPath();\n\n    context.moveTo(0, i);\n    context.lineTo(context.canvas.width, i);\n    context.stroke();\n\n    i -= STEP_Y;\n  }\n}\n\n// Animation.....................................................\n\nfunction animate(time) {\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  drawBackground();\n\n  context.drawImage(spritesheet, 0, 0);\n\n  sprite.update(context, time);\n  sprite.paint(context);\n\n  window.requestNextAnimationFrame(animate);\n}\n\n// Initialization................................................\n\nspritesheet.src = './running-sprite-sheet.png';\n\nspritesheet.onload = function (e) {\n  context.drawImage(spritesheet, 0, 0);\n};\n\nsprite.velocityX = 50; // pixels/second\nsprite.left = 200;\nsprite.top = 100;\n\ncontext.strokeStyle = 'lightgray';\ncontext.lineWidth = 0.5;\n\nwindow.requestNextAnimationFrame(animate);"},"hash":"a8d9678cc8951a2abe85b41d01d44ca0"}