{"dependencies":[],"generated":{"js":"\"use strict\";\n\n/*\r\n * Copyright (C) 2012 David Geary. This code is from the book\r\n * Core HTML5 Canvas, published by Prentice-Hall in 2012.\r\n *\r\n * License:\r\n *\r\n * Permission is hereby granted, free of charge, to any person \r\n * obtaining a copy of this software and associated documentation files\r\n * (the \"Software\"), to deal in the Software without restriction,\r\n * including without limitation the rights to use, copy, modify, merge,\r\n * publish, distribute, sublicense, and/or sell copies of the Software,\r\n * and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * The Software may not be used to create training material of any sort,\r\n * including courses, books, instructional videos, presentations, etc.\r\n * without the express written consent of David Geary.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\r\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\n * OTHER DEALINGS IN THE SOFTWARE.\r\n*/\n\nvar canvas = document.getElementById('canvas'),\n    context = canvas.getContext('2d'),\n    explosionButton = document.getElementById('explosionButton'),\n    BOMB_LEFT = 100,\n    BOMB_TOP = 80,\n    BOMB_WIDTH = 180,\n    BOMB_HEIGHT = 130,\n    NUM_EXPLOSION_PAINTERS = 9,\n    NUM_FUSE_PAINTERS = 9,\n\n\n// Painters..................................................\n\nbombPainter = new ImagePainter('./image/bomb.png'),\n    bombNoFusePainter = new ImagePainter('./image/bomb-no-fuse.png'),\n    fuseBurningPainters = [],\n    explosionPainters = [],\n\n\n// Animators.................................................\n\nfuseBurningAnimator = new SpriteAnimator(fuseBurningPainters, function () {\n  bomb.painter = bombNoFusePainter;\n}),\n    explosionAnimator = new SpriteAnimator(explosionPainters, function () {\n  bomb.painter = bombNoFusePainter;\n}),\n\n\n// Bomb......................................................\n\nbomb = new Sprite('bomb', bombPainter);\n\n// Event Handlers................................................\n\nexplosionButton.onclick = function (e) {\n  if (bomb.animating) // not now...\n    return;\n\n  // burn fuse for 2 seconds\n\n  fuseBurningAnimator.start(bomb, 2000);\n\n  // wait for 3 seconds, then explode for 1 second\n\n  setTimeout(function () {\n    explosionAnimator.start(bomb, 1000);\n\n    // wait for 2 seconds, then reset to the\n    // original bomb image\n\n    setTimeout(function () {\n      bomb.painter = bombPainter;\n    }, 2000);\n  }, 3000);\n};\n\n// Animation.....................................................\n\nfunction animate(now) {\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  bomb.paint(context);\n  window.requestNextAnimationFrame(animate);\n}\n\n// Initialization................................................\n\nbomb.left = BOMB_LEFT;\nbomb.top = BOMB_TOP;\nbomb.width = BOMB_WIDTH;\nbomb.height = BOMB_HEIGHT;\n\nfor (var i = 0; i < NUM_FUSE_PAINTERS; ++i) {\n  fuseBurningPainters.push(new ImagePainter('./image/fuse-0' + i + '.png'));\n}\n\nfor (var i = 0; i < NUM_EXPLOSION_PAINTERS; ++i) {\n  explosionPainters.push(new ImagePainter('./image/explosion-0' + i + '.png'));\n}\n\nwindow.requestNextAnimationFrame(animate);"},"hash":"342d73018c324489a4aff7f2b0327e51"}