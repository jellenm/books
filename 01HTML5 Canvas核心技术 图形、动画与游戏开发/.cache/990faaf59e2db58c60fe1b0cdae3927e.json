{"dependencies":[],"generated":{"js":"\"use strict\";\n\nvar WIDTH = 1000,\n    HEIGHT = 300;\nvar canvas = document.getElementById('canvas'),\n    context = canvas.getContext('2d');\nvar copycanvas = document.createElement('canvas'),\n    copycontext = copycanvas.getContext('2d');\nvar imageData = void 0,\n    mousedownFlag = void 0,\n    mousedownPos = {},\n    scale = 3;\ncanvas.width = WIDTH;\ncanvas.height = HEIGHT;\ncopycanvas.width = WIDTH * scale;\ncopycanvas.height = HEIGHT * scale;\n\nvar Glass = function Glass(pos, radius) {\n  this.x = pos.x;\n  this.y = pos.y;\n  this.radius = radius;\n};\nGlass.prototype = {\n  draw: function draw(context, pos) {\n    context.clearRect(0, 0, WIDTH, HEIGHT);\n    // context.drawImage(image,0,0,image.width,image.height,0,0,WIDTH,HEIGHT);\n    context.putImageData(imageData, 0, 0, 0, 0, WIDTH, HEIGHT);\n    context.save();\n    context.beginPath();\n    if (pos) {\n      this.x = pos.x;\n      this.y = pos.y;\n    }\n    context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI, false);\n    context.fillStyle = '#000000';\n    context.stroke();\n    context.clip();\n    context.drawImage(copycanvas, (scale - 1) * pos.x, (scale - 1) * pos.y, WIDTH, HEIGHT, 0, 0, WIDTH, HEIGHT);\n    context.restore();\n  }\n};\n\nvar glass = new Glass({ x: 600, y: 100 }, 100);\nvar image = new Image();\nimage.src = './detail.jpg';\nimage.onload = function () {\n  context.drawImage(image, 0, 0, image.width, image.height, 0, 0, WIDTH, HEIGHT);\n  imageData = context.getImageData(0, 0, WIDTH, HEIGHT);\n  console.log('iamgeData', imageData);\n  copycontext.drawImage(image, 0, 0, image.width, image.height, 0, 0, WIDTH * scale, HEIGHT * scale);\n  glass.draw(context, { x: 300, y: 100 });\n};\n\nfunction posToCanvas(pos) {\n  var canvasPos = canvas.getBoundingClientRect(),\n      x = void 0,\n      y = void 0;\n  x = pos.x - canvasPos.left;\n  y = pos.y - canvasPos.top;\n  return { x: x, y: y };\n}\nfunction mousedownEve(e) {\n  if (e.target.tagName == 'CANVAS') {\n    mousedownFlag = true;\n    mousedownPos = posToCanvas({ x: e.pageX, y: e.pageY });\n    glass.draw(context, mousedownPos);\n  }\n}\nfunction mousemoveEve(e) {\n  if (mousedownFlag) {\n    glass.draw(context, posToCanvas({ x: e.pageX, y: e.pageY }));\n  }\n}\nfunction mouseupEve(e) {\n  if (mousedownFlag) {\n    mousedownFlag = false;\n  }\n}\ndocument.addEventListener('mousedown', mousedownEve, false);\ndocument.addEventListener('mousemove', mousemoveEve, false);\ndocument.addEventListener('mouseup', mouseupEve, false);"},"hash":"711b6ceae2eecb30c90a0632f948d4f7"}